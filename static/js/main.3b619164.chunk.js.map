{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Container/container.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation.js","image/defaultAvatar.png","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","__","token","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUserName","connect","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","styles","link","display","textDecoration","padding","fontSize","fontWeight","color","activeLink","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","Button","variant","type","onClick","AuthNav","header","justifyContent","borderBottom","Container","children","className","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","contacts","map","contact","includes","alert","checkName","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b619164.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\n\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactError');\n\n\n\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n// export default { addContactRequest, addContactSuccess, addContactError, deleteContact, changeFilter };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3TiUU\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: (_, __) => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n\n// q@wer.com\n// qwertyu\n\n// a@sdf.com\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\nexport default { register, logOut, logIn, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n};\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontSize: 22,\n    fontWeight: 600,\n    color: '#cce0ff',\n  },\n\n  activeLink: {\n    color: '#0066ff',\n    fontSize: 32,\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.bfb337f9.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../redux/auth';\nimport defaultAvatar from '../image/defaultAvatar.png';\nimport Button from 'react-bootstrap/Button';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <Button variant=\"outline-primary\" type=\"button\" onClick={onLogout}>\n      Logout\n    </Button>\n  </div>\n);\n\nconst mapStateToProprs = state => ({\n  name: authSelectors.getUserName(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProprs, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      <Button variant=\"outline-primary\"> Sign up</Button>\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      <Button variant=\"outline-primary\"> Log in</Button>\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport styles from './container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nexport default Container;","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations } from './redux/auth';\n\nimport AppBar from './components/AppBar.js';\nimport Container from './components/Container';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"HomeView\" */),\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"ContactsView\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense fallback={<p>Download...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError\n} from './contacts-actions';\n\n\nconst checkName = (state, { payload }) => {\n  const checkedName = state.map(contact => contact.name).includes(payload.name);\n  if (checkedName) {\n    alert(`${payload.name} is already in contacts`);\n    return;\n  }\n  return [...state, payload];\n};\n\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (state, {payload})=>payload,\n  [addContactSuccess]: (state, { payload }) => checkName(state, { payload }),\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n// const error => createReducer(null, {\n\n// })\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}